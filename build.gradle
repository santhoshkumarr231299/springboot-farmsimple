plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.2'
    id 'io.spring.dependency-management' version '1.1.2'
    id "org.sonarqube" version "4.2.1.3168"
}

group = 'com'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:10.1.12'
}

defaultTasks 'bootRun'

task npmInstall(type: Exec) {
    doFirst {
        println "-----------------------------------------"
        println "Started downloading client dependecies..."
    }
    workingDir('client/')
    commandLine 'npm', 'install', '--legacy-peer-deps'
    doLast {
        println "Download completed"
        println "-----------------------------------------"
    }
}

task npmBuild(type: Exec, dependsOn: npmInstall) {
    workingDir('client/')
    commandLine 'npm', 'run', 'build'
}

task cpClientBuild(type: Copy, dependsOn: npmBuild) {
    doFirst {
        println "---------------------------------"
        println "Copying client build to webapp..."
    }
    from 'client/build/'
    into 'src/main/webapp/'
    include('**/*')
    doLast {
        println "Completed Copying client build to webapp"
        println "----------------------------------------"
    }
}

task buildProject(dependsOn: cpClientBuild) {
    doFirst {
        println "--------------------------"
        println "Started Building Client..."
    }
    doLast {
        println "Building Client Completed"
        println "-------------------------"
    }
}

compileJava.dependsOn(buildProject)

tasks.named('test') {
    useJUnitPlatform()
}
